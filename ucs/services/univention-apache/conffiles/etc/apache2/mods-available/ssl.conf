@%@UCRWARNING=# @%@
<IfModule mod_ssl.c>
Listen 443
#
# Pseudo Random Number Generator (PRNG):
# Configure one or more sources to seed the PRNG of the SSL library.
# The seed data should be of good random quality.
# WARNING! On some platforms /dev/random blocks if not enough entropy
# is available. This means you then cannot use the /dev/random device
# because it would lead to very long connection times (as long as
# it requires to make more entropy available). But usually those
# platforms additionally provide a /dev/urandom device which doesn't
# block. So, if available, use this one instead. Read the mod_ssl User
# Manual for more details.
#
SSLRandomSeed startup builtin
SSLRandomSeed startup file:/dev/urandom 512
SSLRandomSeed connect builtin
SSLRandomSeed connect file:/dev/urandom 512

##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#
#   Some MIME-types for downloading Certificates and CRLs
#
AddType application/x-x509-ca-cert .crt
AddType application/x-pkcs7-crl    .crl

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog  builtin

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
#SSLSessionCache         dbm:/var/run/apache2/ssl_scache
SSLSessionCache        shmcb:/var/run/apache2/ssl_scache(512000)
SSLSessionCacheTimeout  300

#   Semaphore:
#   Configure the path to the mutual exclusion semaphore the
#   SSL engine uses internally for inter-process synchronization. 
SSLMutex  file:/var/run/apache2/ssl_mutex

</IfModule>


NameVirtualHost *:443
<VirtualHost *:443>

<IfModule mod_ssl.c>
SSLEngine on
@!@
if configRegistry.get('apache2/ssl/certificate'):
	print 'SSLCertificateFile %s' % configRegistry.get('apache2/ssl/certificate')
else:
	print 'SSLCertificateFile /etc/univention/ssl/%s.%s/cert.pem' % (configRegistry.get('hostname'), configRegistry.get('domainname'))
if configRegistry.get('apache2/ssl/key'):
	print 'SSLCertificateKeyFile %s' % configRegistry.get('apache2/ssl/key')
else:
	print 'SSLCertificateKeyFile /etc/univention/ssl/%s.%s/private.key' % (configRegistry.get('hostname'), configRegistry.get('domainname'))
if configRegistry.get('apache2/ssl/ca'):
	print 'SSLCACertificateFile %s' % configRegistry.get('apache2/ssl/ca')
else:
	print 'SSLCACertificateFile /etc/univention/ssl/ucsCA/CAcert.pem'
if configRegistry.get('apache2/ssl/certificatechain'):
	print 'SSLCertificateChainFile %s' % configRegistry.get('apache2/ssl/certificatechain')
@!@
#SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
</IfModule>

### To enable special log format for HTTPS-access
# LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\" %p" combinedssl
# CustomLog /var/log/apache2/access.log combinedssl	## with port number

RewriteEngine on
RewriteOptions Inherit

</VirtualHost>
