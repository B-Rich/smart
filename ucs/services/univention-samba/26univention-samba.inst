#! /bin/sh
#
# Univention Samba
#  join script
#
# Copyright 2001-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION=8

. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

. /usr/share/univention-lib/all.sh

eval "$(univention-config-registry shell)"

s4setup="$(ldapsearch -x -ZZ -D "$ldap_hostdn" -y /etc/machine.secret '(&(univentionService=Samba 4)(objectClass=univentionDomainController))' -LLL dn | sed -ne 's|dn: ||p')"
if [ -n "$s4setup" ] && is_domain_controller; then
	# Try to install a S3 DC in a S4 environment ...
	echo "ERROR: It is not possible to install a samba 3 domaincontroller "
	echo "       into a samba 4 environment."

	if is_ucr_true samba3/ignore/mixsetup; then
		echo "WARNING: samba3/ignore/mixsetup is true. Continue as "
		echo "         requested"
	else
		exit 1
	fi
fi

# Join as ADS member if the S4 connector is installed.
# To overwrite this setting:
#  ucr set --force samba/domain/security=ads
#  ucr set --force samba/domain/security=domain
if [ -n "$s4setup" ]; then
	univention-config-registry set samba/domain/security=ads

	/usr/share/univention-samba/mount_extfs_with_user_xattr.py
	if [ -z "$samba4_ntacl_backend" ]; then
		univention-config-registry set samba4/ntacl/backend='native'
		if [ -x /etc/init.d/univention-directory-listener ]; then
			/etc/init.d/univention-directory-listener restart
		fi
	fi

	## set samba/share/home=yes on a memberserver, if it is a join into a samba4 domain and if it is the first join
	if [ "$JS_LAST_EXECUTED_VERSION" = 0 -a "$server_role" = "memberserver" ]; then
		univention-config-registry set samba/share/home=yes
	fi


else
	univention-config-registry set samba/domain/security=domain
fi

rm -f /var/cache/samba/dont_start >/dev/null 2>&1

# during installation samba/autostart was set to no to prevent
# a half configured samba server. Set autostart to yes during first join
if [ "$JS_LAST_EXECUTED_VERSION" = 0 ]; then
	univention-config-registry set samba/autostart=yes
fi
univention-config-registry set samba/autostart?yes

# Stop the NFS Kernel Server
nfsd_pid=`pidof nfsd`
if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server stop
fi

winbind_was_running=0
if [ -x /etc/init.d/winbind ]; then
	if /etc/init.d/winbind status >/dev/null 2>&1; then
		winbind_was_running=1
	fi

	/etc/init.d/winbind stop
fi

if [ "$server_role" = "domaincontroller_slave" -o "$server_role" = "memberserver" ]; then
	univention-config-registry set	samba/user="$ldap_hostdn" \
									samba/user/pwdfile?"/etc/machine.secret"
	smbpasswd -w $(cat /etc/machine.secret)

	echo "setting idmap secret for '*' from /etc/machine.secret"
	net idmap secret '*' $(cat /etc/machine.secret) 2>/dev/null

else
	univention-config-registry set	samba/user?"cn=admin,$ldap_base" \
									samba/user/pwdfile?"/etc/ldap.secret"
	/etc/init.d/samba restart >/dev/null 2>&1

	smbpasswd -w $(cat /etc/ldap.secret)

	echo "setting idmap secret for '*' from /etc/ldap.secret"
	net idmap secret '*' $(cat /etc/ldap.secret) 2>/dev/null
fi

eval "$(univention-config-registry shell samba/user/pwdfile samba/user)"

# The samba server should be up and running for local join
/etc/init.d/samba restart
sleep 3

# parse binddn and bindpwd from command line arguments into shell variables
eval $(echo "$@" | sed -n 's/.*--binddn \(.*\) --bindpwd \(.*\).*/binddn="\1"\nbindpwd="\2"/p')
if [ -n "$binddn" ]; then
	dcaccount="$(ldapsearch -x -ZZ -D "$ldap_hostdn" -y /etc/machine.secret -s base -b "$binddn" -LLL uid | ldapsearch-wrapper | sed -n 's/^uid: \(.*\)$/\1/p')"
fi
if [ -n "$dcaccount" -a -n "$bindpwd" ]; then
	samba_account="$dcaccount"
	samba_pwd="$bindpwd"
elif [ -e /etc/backup-join.secret ]; then
	samba_account="join-backup"
	samba_pwd="$(cat /etc/backup-join.secret)"
fi

security="$(univention-config-registry get samba/domain/security)"
if [ "$security" = "ads" ]; then
	# Use the correct kerberos KDC
	if [ -z "$kerberos_kdc" ]; then
		kdc="$(LC_ALL=C net ads lookup | sed -ne 's|^Domain Controller:[\t]*||p' | head -n 1)"
		if [ -n "$kdc" ]; then
			univention-config-registry set	kerberos/defaults/dns_lookup_kdc=false \
											kerberos/kdc="$kdc"
		fi
	fi
	JOIN_CMD="net ads join"
else
	JOIN_CMD="net rpc join"
fi

if [ -n "$samba_account" -a -n "$samba_pwd" ]; then
	if [ $JS_LAST_EXECUTED_VERSION -le 5 ]; then
		# set the samba option
		univention-directory-manager computers/$server_role modify "$@" --dn "$ldap_hostdn" --append-option samba --set password="$(cat /etc/machine.secret)" || die
	fi

	# Join against the global workgroup
	if $JOIN_CMD -U${samba_account}%${samba_pwd}; then
		:
	# try to join directly against the DC master
	elif $JOIN_CMD -U${samba_account}%${samba_pwd} -S${ldap_master}; then
		#The join against the ldap_master was successful, set him as wins server
		univention-config-registry set windows/wins-server?"${ldap_master}"
	# try to join against localhost
	elif $JOIN_CMD -U${samba_account}%${samba_pwd} -Slocalhost; then
		:
	else
		echo "ERROR: Failed to join via $JOIN_CMD. Please check your Samba DCs and your DNS and WINS configuration."
		exit 1
	fi

	# restart samba
	/etc/init.d/samba stop
	test -x /etc/init.d/winbind && /etc/init.d/winbind stop
	sleep 1
	/etc/init.d/samba start
	sleep 1
	test -x /etc/init.d/winbind && { /etc/init.d/winbind start; sleep 3; }

	# set default printer permissions
	net rpc rights -U${samba_account}%${samba_pwd} grant Printer-Admins SePrintOperatorPrivilege
	net rpc rights -U${samba_account}%${samba_pwd} grant Administrator SePrintOperatorPrivilege

else
	# stop samba
	restart=0
	samba_pid=`pidof smbd`
	if [ -n "$samba_pid" ]; then
		/etc/init.d/samba stop >/dev/null 2>&1
		killall smbd nmbd >/dev/null 2>&1
	fi
fi


SAMBA_DRIVERS="/var/lib/samba/drivers"
mkdir -p $SAMBA_DRIVERS
chgrp -R "Printer-Admins" $SAMBA_DRIVERS
chmod g+w $SAMBA_DRIVERS
chmod +s $SAMBA_DRIVERS

for X in COLOR IA64 W32ALPHA W32MIPS W32PPC W32X86 WIN40 x64; do 
	mkdir -p $SAMBA_DRIVERS/$X;
	chgrp -R "Printer-Admins" $SAMBA_DRIVERS/$X
	chmod g+w $SAMBA_DRIVERS/$X
	chmod +s $SAMBA_DRIVERS/$X
done

# do create and modify in two steps, maybe the share already exists
univention-directory-manager container/cn create "$@" --position "cn=shares,$ldap_base" --ignore_exists --set name=$hostname.$domainname || die
univention-directory-manager container/cn modify "$@" --dn "cn=$hostname.$domainname,cn=shares,$ldap_base" --set sharePath=1 || die


if [ -n "$create_home_share" -a "$create_home_share" = "true" ]; then
	univention-directory-manager shares/share create "$@" --position "cn=$hostname.$domainname,cn=shares,$ldap_base" --ignore_exists --set name=homes --set path=/home --set sambaName=homes --set host=$hostname.$domainname --set writeable=1 --set sambaWriteable=1 || die
	univention-config-registry unset create/home/share
fi


/etc/init.d/samba restart >/dev/null 2>&1

if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server start
fi

if [ $winbind_was_running -eq 1 ]; then
	/etc/init.d/winbind restart >/dev/null 2>&1
fi

ucs_addServiceToLocalhost 'Samba 3' "$@"

# sync netlogon share
/usr/share/univention-samba/slave-sync >>/var/log/univention/samba-sync.log

joinscript_save_current_version

exit 0
