#! /bin/sh
#
# Univention Bind
#  join script
#
# Copyright 2001-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION=1
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

. /usr/share/univention-lib/all.sh

# Bug #27001
local_is_ucr_false () { # test if UCS variable is "true" or "false"
    local value
    value="$(univention-config-registry get "$1")"
    case "$(echo -n "$value" | tr [:upper:] [:lower:])" in
        1|yes|on|true|enable|enabled) return 1 ;;
        0|no|off|false|disable|disabled) return 0 ;;
        *) return 2 ;;
    esac
}

eval "$(univention-config-registry shell)"

if test -z "$ldap_server_ip" -a -z "$ldap_server_name"; then
	exit 1
fi

wait_for_dns () {
	echo -n "Wait for bind9: "
	count=0
	while [ $count -le 600 ]; do
		if LC_ALL=C host -W 1 "$ldap_master" 2>&1 | grep -q 'has \(IPv6 \)\?address '
		then
			echo " done"
			break
		else
			echo -n "."
			# restart bind every 200 seconds
			expr $count % 200 >/dev/null || invoke-rc.d bind9 restart
			sleep 1
		fi
		count=$((count+1))
	done

	if ! local_is_ucr_false dns/register/srv_records/ldap; then
		count=0
		while [ $count -le 600 ]; do
			if LC_ALL=C host -t SRV -W 1 "_ldap._tcp.$domainname" 2>&1 | grep -q "has SRV record"
			then
				echo " done"
				break
			else
				echo -n "."
				# restart bind every 200 seconds
				expr $count % 200 >/dev/null || invoke-rc.d bind9 restart
				sleep 1
			fi;
			count=$((count+1))
		done
	fi

	nscd -i hosts
}

univention-config-registry set dns/backend?ldap
IP="$(get_default_ip_address)"

if [ -z "$nameserver_external" ] || ! is_ucr_true nameserver/external; then
	if [ "$nameserver1" = "$dns_forwarder1" ]; then
		univention-config-registry unset nameserver1
		unset nameserver1
	fi
	if [ "$nameserver2" = "$dns_forwarder2" ]; then
		univention-config-registry unset nameserver2
		unset nameserver2
	fi
	if [ "$nameserver3" = "$dns_forwarder3" ]; then
		univention-config-registry unset nameserver3
		unset nameserver3
	fi

	if [ "$IP" != "$nameserver1" ]; then
		if [ -z "$nameserver1" ]; then
			univention-config-registry set nameserver1="$IP"
		elif [ -z "$nameserver2" ]; then
			univention-config-registry set nameserver2="$nameserver1" nameserver1="$IP"
		elif [ -z "$nameserver3" ]; then
			univention-config-registry set nameserver3="$nameserver2" nameserver2="$nameserver1" nameserver1="$IP"
		else
			univention-config-registry set nameserver4="$nameserver3" nameserver3="$nameserver2" nameserver2="$nameserver1" nameserver1="$IP"
		fi
	fi
fi

if [ ! -e /etc/runit/univention/univention-bind-proxy ]; then
	ln -s /etc/runit/univention-bind-proxy /etc/runit/univention/univention-bind-proxy
fi

if [ ! -e /etc/runit/univention/univention-bind-samba4 ]; then
	ln -s /etc/runit/univention-bind-samba4 /etc/runit/univention/univention-bind-samba4
fi

if [ $JS_LAST_EXECUTED_VERSION = 0 ]; then
	# these might be hangovers from the installation
	pkill -f /usr/sbin/named
	sleep 3
	pkill -9 -f /usr/sbin/named
fi

# Restart the bind9 daemon and wait for a few seconds if the local nameserver should be used
invoke-rc.d bind9 restart
if [ -z "$nameserver_external" ] || ! is_ucr_true nameserver/external; then
	wait_for_dns
fi

old=`univention-directory-manager policies/dhcp_dns list "$@" --filter cn=default-settings | grep domain_name_servers | sed -e 's|.*domain_name_servers: ||'`
if [ -z "$old" -o "$old" = "None" ]; then
	if ! echo "$IP" | grep -q ":" # Don't register IPv6?
	then
		univention-directory-manager policies/dhcp_dns modify "$@" --ignore_exists --dn "cn=default-settings,cn=dns,cn=dhcp,cn=policies,$ldap_base" --set name=default-settings --set domain_name=$domainname --set domain_name_servers=$IP
	fi
fi

ucs_addServiceToLocalhost 'DNS' "$@"

joinscript_save_current_version

exit 0
