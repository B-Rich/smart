#! /bin/bash
#
# Univention Squid Samba4
#  join script
#
# Copyright 2010-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

VERSION=1
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

eval "$(univention-config-registry shell)"


## look for S4 Connector hosts to add the servicePrincipalName to the directory object
s4connectorservicehosts="$(univention-directory-manager computers/computer list "$@" --filter "(univentionService=S4 Connector)" | sed -ne 's|^DN: cn=\([^,]*\).*|\1|p')"

## Hmm, seems like we are not in a UCS 3 Samba 4 domain
if [ -z "$s4connectorservicehosts" ]; then
	echo "INFO: No S4 Connector Service found in UDM"
	echo "INFO: Cannot register a servicePrincipalName"
	exit 0
fi

## Ok, we are in a Samba 4 domain, go on to create the service principal
servicename='http-proxy'
servicedescription="$servicedescription Service Account for $hostname"
spn_instance='HTTP'

extract_binddn_and_bindpwd_from_args() {
	## parse binddn and bindpwd from command line arguments into shell variables
	eval $(echo "$@" | sed -n 's/.*--binddn \(.*\) --bindpwd \(.*\).*/binddn="\1"\nbindpwd="\2"/p')
	if [ -n "$binddn" ]; then
		dcaccount="$(ldapsearch -x -ZZ -D "$ldap_hostdn" -y /etc/machine.secret -s base -b "$binddn" -LLL uid | ldapsearch-wrapper | sed -n 's/^uid: \(.*\)$/\1/p')"
	fi
}

samba_private_dir="/var/lib/samba/private"

service_accountname="$servicename-$hostname"
keytab_filename="$service_accountname.keytab"
keytab_path="$samba_private_dir/$keytab_filename"

password=$(makepasswd)

## create service_accountname via udm, but servicePrincipalName is missing
univention-directory-manager users/user create "$@" \
	--position "cn=users,$ldap_base" \
	--ignore_exists \
	--set username="$service_accountname" \
	--set lastname="Service" \
	--set password="$password" \
	--set description="$servicedescription" || die

## Next for keytab creation check if this host is a Samba4 DC
cn=$(ldapsearch -x -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=Samba 4)(cn=$hostname))" cn | sed -n 's/^cn: \(.*\)/\1/p')

if [ "$cn" = "$hostname" ]; then

	if [ $JS_LAST_EXECUTED_VERSION = 0 ]; then
		## trigger Samba4 to create service keytab
		ldbadd -H "$samba_private_dir/secrets.ldb" <<-%EOF
		dn: samAccountName=$service_accountname,CN=Principals
		objectClass: kerberosSecret
		sAMAccountName: $service_accountname
		servicePrincipalName: $spn_instance/$(hostname -f)
		realm: $kerberos_realm
		secret: $password
		msDS-KeyVersionNumber: 1
		privateKeytab: $keytab_filename
		%EOF
	fi

	if ! [ -f "$keytab_path" ]; then
		echo "WARNING: samba4 did not create a keytab for samAccountName=$service_accountname"
		echo "WARNING: creating keytab manually"
		/usr/lib/univention-heimdal/univention-create-keytab --keytab="$keytab_path" \
			--principal="host/$service_accountname.$domainname" \
			--alias="$spn_instance/$hostname.$domainname" \
			--alias="$service_accountname" \
			--kvno=1 --password="$password"
	fi

	chown proxy "$keytab_path"

	## wait for S4 Connector and possibly DRS until the service_accountname is available
	count=0
	while [ -z "$service_account_dn" ] && [ $count -le 300 ]; do
		sleep 1
		service_account_dn=$(ldbsearch -H $samba_private_dir/sam.ldb samAccountName="$service_accountname" dn | sed -n 's/^dn: \(.*\)/\1/p')
		count=$((count+1))
	done

	if [ -z "$service_account_dn" ]; then
		echo "ERROR: samAccountName not found for service account $service_accountname"
		echo "ERROR: cannot add attribute \"servicePrincipalName: $spn_instance/$(hostname -f)\""
		exit 1
	fi

	ldbmodify -H "$samba_private_dir/sam.ldb" <<-%EOF
	dn: $service_account_dn
	changetype: modify
	add: servicePrincipalName
	servicePrincipalName: $spn_instance/$(hostname -f)
	-
	%EOF

else
	### in this case we are not a Samba4-DC, i.e. we are a samba3 UCS memberserver in a Samba 4 domain

	## using ldap-tools here
	## ldbmodify might be an option, depends on package ldb-tools
	## samba-tool might be another option, but it needs samba4-common-bin and python-samba4

	extract_binddn_and_bindpwd_from_args "$@"
	samba4_bind_dn="CN=$dcaccount,CN=Users,$ldap_base"

	## try to connect to any of the hosts running the S4 Connector
	s4connectors=( $s4connectorservicehosts )

	s4dc_fqdn=''
	for s4dc in "${s4connectors[@]}"; do
		try_fqdn="$s4dc.$domainname"
		test_dn=$(ldapsearch -x -LL -H "ldaps://$try_fqdn" -D"$samba4_bind_dn" -w "$bindpwd" samAccountName="$dcaccount" dn | sed -n 's/^dn: \(.*\)/\1/p')
		if [ -n "$test_dn" ]; then
			s4dc_fqdn="$try_fqdn"
			break
		fi
	done

	if [ -z "$s4dc_fqdn" ]; then

		## Hmm, try other S4 DCs
		samba4servicedcs=$(ldapsearch -x -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=Samba 4)(objectClass=univentionDomainController))" cn | sed -n 's/^cn: \(.*\)/\1/p')	## currently there is no u-d-m module computers/dc

		samba4dcs=( $samba4servicedcs )

		for s4dc in "${samba4dcs[@]}"; do
			try_fqdn="$s4dc.$domainname"
			test_dn=$(ldapsearch -x -LL -H "ldaps://$try_fqdn" -D"$samba4_bind_dn" -w "$bindpwd" samAccountName="$dcaccount" dn | sed -n 's/^dn: \(.*\)/\1/p')
			if [ -n "$test_dn" ]; then
				s4dc_fqdn="$try_fqdn"
				break
			fi
		done

		if [ -z "$s4dc_fqdn" ]; then
			echo "ERROR: No Samba 4 DC available for LDAP"
			exit 1
		fi

	fi

	## wait for S4 Connector and possibly DRS
	count=0
	while [ -z "$service_account_dn" ] && [ $count -le 300 ]; do
		sleep 1
		service_account_dn=$(ldapsearch -x -LL -H "ldaps://$s4dc_fqdn" -D"$samba4_bind_dn" -w "$bindpwd" samAccountName="$service_accountname" dn | sed -n 's/^dn: \(.*\)/\1/p')
		count=$((count+1))
	done

	if [ -z "$service_account_dn" ]; then
		echo "ERROR: $service_accountname not found in samba4 directory on host $s4dc.$domainname"
		echo "ERROR: cannot add attribute \"servicePrincipalName: $spn_instance/$(hostname -f)\""
		exit 1
	fi

	ldapmodify -x -H "ldaps://$s4dc_fqdn" -D"$samba4_bind_dn" -w "$bindpwd" <<-%EOF
	dn: $service_account_dn
	changetype: modify
	add: servicePrincipalName
	servicePrincipalName: $spn_instance/$(hostname -f)
	%EOF

	## OK, everything fine up to this point so now create service keytab manually
	if ! [ -d "$samba_private_dir" ]; then
		mkdir -p "$samba_private_dir"
	fi

	/usr/lib/univention-heimdal/univention-create-keytab --keytab="$keytab_path" \
		--principal="host/$service_accountname.$domainname" \
		--alias="$spn_instance/$hostname.$domainname" \
		--alias="$service_accountname" \
		--kvno=1 --password="$password"

	chown proxy "$keytab_path"

fi

joinscript_save_current_version

exit 0

