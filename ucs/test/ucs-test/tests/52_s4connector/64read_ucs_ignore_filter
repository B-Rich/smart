#!/usr/share/ucs-test/runner bash 
## desc: "Check whether the User-Ignore-Filter is respected on ucs-side in read-mode"
## exposure: dangerous
## packages:
## - univention-s4-connector


. "$TESTLIBPATH/base.sh" || exit 137
. "$TESTLIBPATH/udm.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137


. "s4connector.sh" || exit 137
test -n "$connector_s4_ldap_host" || exit 137

UDM_users_user_username="$(random_chars)"
UDM_users_user_lastname="$(random_chars)"
# If the password doesn't adhere the configured Windows-Password-Guidelines
# weird things might happen when the user is synced to AD.
UDM_users_user_password="U$(random_chars)123"
AD_GROUP_DN="CN=$UDM_groups_group_name,CN=groups,$(ad_get_base)"
UDM_GROUP_DN="cn=$UDM_groups_group_name,cn=groups,$ldap_base"
AD_USER_DN="CN=$UDM_users_user_username,CN=Users,$(ad_get_base)"

SYNCMODE="$(ad_get_sync_mode)"

section "Modify User-Ignore-Filter"

invoke-rc.d univention-s4-connector stop

MAIN_FILE="/usr/share/pyshared/univention/s4connector/s4/main.py"
cp -f "$MAIN_FILE" "$MAIN_FILE".ucs-test-backup
sed -i "s/import mapping/import mapping\nucs_test_filter = mapping.s4_mapping ['user'].ignore_filter\nucs_test_filter = ucs_test_filter[0:len(ucs_test_filter)-1]\nucs_test_filter=ucs_test_filter+'(uid=$UDM_users_user_username))'\nmapping.s4_mapping ['user'].ignore_filter = ucs_test_filter/" "$MAIN_FILE"

ad_set_sync_mode "read"
invoke-rc.d univention-s4-connector start

section "Create user"

udm_create "users/user" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

udm_exists "users/user"; fail_bool 0 110
ad_exists "$AD_USER_DN"; fail_bool 1 110

section "Clean up"

udm_remove "users/user" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

ad_exists "$AD_USER_DN"; fail_bool 1 110
udm_exists "users/user"; fail_bool 1 110

invoke-rc.d univention-s4-connector stop
mv -f "$MAIN_FILE".ucs-test-backup "$MAIN_FILE"
ad_set_sync_mode "$SYNCMODE"
invoke-rc.d univention-s4-connector start

exit "$RETVAL"
