#!/bin/bash
## desc: Test account locking via shadow/ldap, smb, krb
## roles: [domaincontroller_master]
## tags: [basic, univention]
## packages: [univention-directory-manager-tools, openssh-server, smbclient, heimdal-clients]
## exposure: dangerous
## versions:
##  1.0-0: skip
##  2.4-0: fixed

. "$TESTLIBPATH/ucr.sh" || exit 137
. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/base.sh" || exit 137

NAME=$(user_randomname)

ucr set \
	auth/faillog=no \
	auth/faillog/lock_global=no

tdir=$(mktemp -d)
trap "rm -rf '$tdir' ; user_remove '$NAME' ; ucr_restore ; invoke-rc.d ssh restart" EXIT
passwd="$tdir/passwd"
echo -n "${BINDPWD}" >"$passwd"

posix_login () {
	local name pass lstchg min max warn inact expire flag
	IFS=: read name pass lstchg min max warn inact expire flag < <(getent shadow "$NAME")
	[ -z "$expire" ] || [ "$expire" -gt 1 ]
}
posix_login () {
	python2.6 -c '
import sys
import os
import PAM

service = "ucstest"
name = sys.argv[1]
passwd = sys.stdin.readline().rstrip()
conf = "/etc/pam.d/%s" % service

def pam_conv(auth, query_list, userData):
	resp = []
	for query, type in query_list:
		if type == PAM.PAM_PROMPT_ECHO_ON:
			resp.append((name, 0))
		elif type == PAM.PAM_PROMPT_ECHO_OFF:
			resp.append((passwd, 0))
		elif type in (PAM.PAM_ERROR_MSG, PAM.PAM_TEXT_INFO):
			print >>sys.stderr, query
			resp.append(("", 0))
		else:
			return None
	return resp

fd = open(conf, "w")
print >>fd, "auth required pam_ldap.so"
print >>fd, "account required pam_unix.so"
fd.close()

try:
	auth = PAM.pam()
	auth.start(service)
	auth.set_item(PAM.PAM_USER, name)
	auth.set_item(PAM.PAM_CONV, pam_conv)
	auth.authenticate()
	auth.acct_mgmt()
	sys.exit(0)
finally:
	os.remove(conf)' "$NAME" <"$1"
}

smb_login () {
	smbclient -g -L "$hostname" -U "${NAME}%$(<$1)" | grep "^Disk|$NAME|"
}

krb_login () {
	kinit --password-file="${1}" "$NAME"
}

user_create "$NAME" \
	--set groups="cn=Administrators,cn=groups,$ldap_base"

while read udm windows kerberos posix comment
do
	[[ "$udm" = "#"* ]] && continue
	[ -z "${udm//[	 ]/}" ] && continue
	info "udm=$udm"
	user_set_attr "$NAME" disabled "" "$udm"

	[ 0 -ne "$windows" ] && kerberos="$windows" # Kerberos checks sambaAcctFlags
	[ 0 -ne "$posix" ] && windows="$posix" # Samba depends on pam_unix: acct_expired=bad

	sleep 5 # wait for replication

	smb_login "$passwd"
	if [ $? -ne "$windows" ]
	then
		fail_test 110 "Failed Windows login: expected $windows, got $result"
	fi

	krb_login "$passwd"
	if [ $? -ne "$kerberos" ]
	then
		fail_test 110 "Failed Kerberos login: expected $kerberos, got $result"
	fi

	posix_login "$passwd"
	if [ $? -ne "$posix" ]
	then
		fail_test 110 "Failed POSIX login: expected $posix, got $result"
	fi
done <<EOF
#udm	windows	kerberos	posix	comment
none	0	0	0
windows	1	0	0
posix	0	0	1
kerberos	0	1	0
posix_kerberos	0	1	1
windows_kerberos	1	1	0
windows_posix	1	0	1
all	1	1	1
EOF

exit $RETVAL
# vim: set ft=sh :
