#!/usr/share/ucs-test/runner bash
## desc: "Test whether it works to set a password policy"
## exposure: safe
## packages:
##  - univention-samba4
## roles:
## - domaincontroller_master
. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137

#create user
SAMBA="true"
MAIL="false"
KERBEROS="true"
PERSON="false"
POSIX="true"

username="$(user_randomname)"
first_password=univention
second_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)Ui8ÄÖÜ"
third_password="$(random_chars 8 ${_upperletters}${_lowerletters}${_ciphers}äöü)Ui8ÄÖÜ"

trap 'user_remove "$username"' INT TERM EXIT
user_create "$username" || fail_test 1 "Could not create user $username."

#in case passwort is not the default one
if [ $(ucr get server/role) == "domaincontroller_master" -a -e /root/root.secret ];then
    ADMINISTRATOR_PASSWORD="$(cat /root/root.secret)"
fi

#wait for the user to be created
#wait for the samba-share.py Listener to synchronize /etc/samba/shares.conf and /etc/samba/shares.conf.d (Bug #29399)
i=0
while true
do
    let i=$i+1
    sleep 1
    samba-tool user list | grep "$username" > /dev/null 2>&1 && break
    if [ $i == 20 ]; then
	echo "TIMEOUT: The User which has been created in UDM could not be found in samba ldb after $i seconds"
	break
    fi
done

ADMINISTRATOR_DN="$(univention-directory-manager users/user list --filter uid="$ADMINISTRATOR_USER" | sed -ne 's/^DN: //p')"
USER_DN="$(univention-directory-manager users/user list --filter uid="$username" | sed -ne 's/^DN: //p')"

#test normal connection
ldbsearch -U "$username%$first_password" -H ldap://localhost "cn=$username" > /dev/null || fail_test 1 "initial authentification failed"

whenChanged="$(ldbsearch -H "ldap://localhost" -U"$ADMINISTRATOR_USER%$ADMINISTRATOR_PASSWORD" "cn=$username" | grep whenChanged)"

#set pwdChangeNextLogin=1 so that the user hast to change the password at the next login
univention-directory-manager users/user modify --binddn "$ADMINISTRATOR_DN" --bindpwd "$ADMINISTRATOR_PASSWORD" --dn "$USER_DN" --set pwdChangeNextLogin=1 || fail_test 1 "Could not modify the user using udm."

#wait until it is recognized in samba that the user has been modified
i=0
while true
do
    let i=$i+1
    sleep 1
    whenChanged2="$(ldbsearch -H "ldap://localhost" -U"$ADMINISTRATOR_USER%$ADMINISTRATOR_PASSWORD" "cn=$username" | grep whenChanged)"
    if [ "$whenChanged" != "$whenChanged2" ]; then
	break
    fi
    if [ $i == 20 ]; then
	echo "TIMEOUT: A change of the variable pwdChangeNextLogin could not be recognized."
	break
    fi
done

#try to login without changing the password, should fail
retval=$(ldbsearch -U "$username%$first_password" -H ldap://localhost "cn=$username" 2>&1)
echo $retval | grep "NT_STATUS_PASSWORD_MUST_CHANGE" || fail_test 1 "Expected return value \"NT_STATUS_PASSWORD_MUST_CHANGE\", but received $retval"

pwdLastSet=$(ldbsearch -H "ldap://localhost" -U"$ADMINISTRATOR_USER%$ADMINISTRATOR_PASSWORD" "cn=$username" | grep pwdLastSet)

#changing the password with samba-tool
samba-tool user setpassword "$username" --newpassword="$second_password" 

#wait until the password change is recognized by samba
i=0
while true
do
    let i=$i+1
    sleep 1
    ldbsearch -U "$username%$second_password" -H ldap://localhost "cn=$username" > /dev/null && break
    echo "$i"
    if [ "$i" == 20 ]; then
	fail_test 1 "Could not login using samba with new password after password change."
	break
    fi
done

#try to login with old password, should not work                                                                                                       
ldbsearch -U "$username%$first_password" -H ldap://localhost "cn=$username" > /dev/null && fail_test 1 "Could login using samba with old password after password change."

#--old password
i=0
while true
do
    let i=$i+1
    sleep 1
    /usr/sbin/univention-directory-manager users/user list --binddn "$USER_DN" --bindpwd "$second_password" > /dev/null && break
    if [ "$i" == 20 ]; then
	fail_test 1 "Could not login using UDM with new password after password change."
	break
    fi
done

#--new password
/usr/sbin/univention-directory-manager users/user list --binddn "$USER_DN" --bindpwd "$first_password" > /dev/null && fail_test 1 "Could login using UDM with old password after password change."

exit $RETVAL