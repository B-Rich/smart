#!/usr/share/ucs-test/runner bash
## desc: "Test whether fACL's  set in UDM are working"
## exposure: safe
## packages:
## - univention-samba4
## roles:
## - domaincontroller_master
## - domaincontroller_backup
## - domaincontroller_slave

. "$TESTLIBPATH/user.sh" || exit 137
. "$TESTLIBPATH/shares.sh" || exit 137
. "$TESTLIBPATH/random.sh" || exit 137

#----create User
SAMBA="true"
MAIL="false"
KERBEROS="true"
PERSON="false"
POSIX="true"

username="$(user_randomname)"
username2="$(user_randomname)"
first_password=univention
sharename="$(random_share)"

trap 'user_remove "$username";user_remove "$username2";share_remove $sharename' INT TERM EXIT
user_create "$username" || fail_test 1 "Could not create user $username."
user_create "$username2" || fail_test 1 "Could not create user $username2."

#----create Share
SHARE_POSITION="cn=shares,$ldap_base"
udm shares/share create --position="$SHARE_POSITION" \
    --set name="$sharename" \
    --set path="/$sharename" \
    --set directorymode=0777 \
    --set host="$hostname.$domainname" || fail_fast 1 "could not create share"

SHARE_DN=$(univention-directory-manager shares/share list --filter sambaName="$sharename" | sed -ne 's/^DN: //p')

USER_DN="$(univention-directory-manager users/user list --filter uid="$username" | sed -ne 's/^DN: //p')"

#waiting for user and share to be created
user1_found=1
user2_found=1
i=0
while true
do
    let i=$i+1
    sleep 3
    ldbsearch -H "ldap://localhost" -U"$username%$first_password" "cn=$username" | grep dn: && user1_found=0
    ldbsearch -H "ldap://localhost" -U"$username2%$first_password" "cn=$username2" | grep dn: && user2_found=0

    if [ "$user1_found" == 0 -a "$user2_found" == 0 ];then
	smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "exit" && break
    fi
    if [ "$i" == 10 ]; then
	echo "TIMEOUT: The user or share could not be found in samba ldb"
	break
    fi
done

#--Tests
#----Testing general connection
smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "exit"  || fail_test 1 "Could not connect to the share."

#----making a folder as another user, so that the other user is not the owner which is important for the ACL tests
return_val="$(smbclient -U "$username2%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder3")"
echo $return_val | grep "NT_STATUS_NOT_A_DIRECTORY"
if [ $? != 0 ]  && [ -n "$return_val" ]; then
    fail_test 1 "Failed to make a folder as a second user even though it should work."
fi

#----accessing a folder without permission
setfacl -m "user:$username:---" "/$sharename/folder3"
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "ls folder3\*")"
echo $return_val | grep "NT_STATUS_ACCESS_DENIED" || fail_test 1 "Expected return value NT_STATUS_ACCESS_DENIED, but received: $return_val"

#----accessing a folder
setfacl -m "user:$username:r-x" "/$sharename/folder3"
smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "ls folder3\*"
if [ $? != 0 ]; then
    fail_test 1 "Failed to access the folder even though it should work.."
fi

#----making a folder without permission
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder3\folder4")"
echo $return_val | grep "NT_STATUS_ACCESS_DENIED" || fail_test 1 "Expected return value NT_STATUS_ACCESS_DENIED, but received: $return_val"

#----making a folder
setfacl -m "user:$username:rwx" "/$sharename/folder3"
return_val="$(smbclient -U "$username%$first_password" "//$hostname.$domainname/$sharename" -c "mkdir folder3\folder5")"
if [ $? != 0 ]; then
    fail_test 1 "Failed to make a folder even though it should work."
fi


exit $RETVAL
