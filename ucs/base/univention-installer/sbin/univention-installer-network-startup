#!/bin/bash
#
# Univention Installer
#  network configuration
#
# Copyright 2004-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

set -x

. /tmp/network_profile

ifconfig lo 127.0.0.1 up

echo
ifconfig -a | grep ^eth
if [ "$?" -ne 0 ]; then
	echo "Warning Networking: eth0 not found"
	echo "YES" > /tmp/dummy-network-interface.txt
	modprobe dummy
	ifconfig dummy0 down
	/bin/ip link set dummy0 name eth0
	ifconfig eth0 192.168.0.2 netmask 255.255.255.0 up
	echo "Notice Networking: added virtual dummy interface as eth0"
	ifconfig eth0
fi

startNetworkInterface() {

	local address="$1"
	local netmask="$2"
	local broadcast="$3"
	local network="$4"
	local interface="$5"

	if [ -z "$address" -o -z "$netmask" -o -z "$broadcast" -o -z "$interface" ]; then
		return
	fi

	python2.6 /sbin/univention-config-registry set interfaces/$interface/address=$address
	python2.6 /sbin/univention-config-registry set interfaces/$interface/netmask=$netmask
	python2.6 /sbin/univention-config-registry set interfaces/$interface/broadcast=$broadcast

	if [ -n "$network" ]; then
		python2.6 /sbin/univention-config-registry set interfaces/$interface/network=$network
	fi

	ifconfig $interface inet 0
	ifconfig $interface $address netmask $netmask broadcast $broadcast up
}

ifaceregex="^eth[0-9]+_"
interfaces="$(set | egrep "${ifaceregex}" | awk -F _ '{print $1}' | sort -u)"

# setup interface
for interface in $interfaces; do

	addressVar="${interface}_ip"
	netmaskVar="${interface}_netmask"
	broadcastVar="${interface}_broadcast"
	networkVar="${interface}_network"
	dynamicVar="${interface}_type"

	address="${!addressVar}"
	netmask="${!netmaskVar}"
	broadcast="${!broadcastVar}"
	network="${!networkVar}"
	dynamic="${!dynamicVar}"
	
	# dhcp request
	if [ -n "$dynamic" ] && [ "$dynamic" = "dynamic" -o "$dynamic" = "dhcp" ]; then
	
		python2.6 /sbin/univention-config-registry set interfaces/$interface/type=dhcp
	
		# dhclient only if no address is set
		if [ -z "$address" -o -z "$netmask" ]; then
			ifconfig $interface up
			outfile="/tmp/dhclient-$interface.$$"
			mkdir -p /var/lib/dhcp3/
			dhclient -1 \
				-sf /lib/univention-installer/dhclient-script-wrapper \
				-e dhclientscript_outputfile="$outfile" \
				$interface
			if [ -s "$outfile" ]; then
				. "$outfile"
				rm -f "$outfile"
			fi 
		fi
	
		# test dhcp
		address="${!addressVar}"
		netmask="${!netmaskVar}"
		if [ -z "$address" -o -z "$netmask" ]; then
			r1=$((RANDOM % 254 + 1))
			r2=$((RANDOM % 255))
			address="169.254.$r1.$r2"
			netmask="255.255.0.0"
			broadcast="169.254.$r1.255"
			network="169.254.$r1.0"
		fi
	
	fi
	
	# do it
	startNetworkInterface "$address" "$netmask" "$broadcast" "$network" "$interface"

done

# set IPv6 acceptra
set | egrep "${ifaceregex}acceptra=" | while read line; do
	network_device=`echo $line | sed -e 's|_acceptra.*||'`
	if [ -z "$network_device" ]; then
		continue
	fi

	acceptra="$(echo $line | sed -e 's|.*=||' | sed -e 's|"||g' | sed -e "s|'||g")"

	python2.6 /sbin/univention-config-registry set "interfaces/$network_device/ipv6/acceptRA=false"
	if [ -n "$acceptra" ] ; then
		if [ "$acceptra" = "true" ] ; then
			python2.6 /sbin/univention-config-registry set "interfaces/$network_device/ipv6/acceptRA=$acceptra"
			sysctl -w "net.ipv6.conf.${network_device}.accept_ra=1"
		else
			sysctl -w "net.ipv6.conf.${network_device}.accept_ra=0"
		fi
	fi
	ip link set "$network_device" up
done

# set IPv6 address
set | egrep "${ifaceregex}ip6=" | while read line; do

	network_device=`echo $line | sed -e 's|_ip6.*||'`

	if [ -z "$network_device" ]; then
		continue
	fi

	address="$(echo $line | sed -e 's|.*=||' | sed -e 's|"||g' | sed -e "s|'||g")"
	prefix="$(set | egrep "^${network_device}_prefix6=" | sed -e 's|.*=||' | sed -e 's|"||g' | sed -e "s|'||g")"

	if [ -n "$address" -a -n "$prefix" ] ; then
		python2.6 /sbin/univention-config-registry set \
			"interfaces/$network_device/ipv6/default/address=$address" \
			"interfaces/$network_device/ipv6/default/prefix=$prefix"
		ip link set "$network_device" up
		ip -6 addr add "$address/$prefix" dev "${network_device}"
	fi
done

route del default
if [ -n "$gateway" ]; then
	python2.6 /sbin/univention-config-registry set gateway=$gateway

	nm=$(python2.6 /sbin/univention-config-registry get interfaces/eth0/netmask)
	if [ -n "$nm" ]; then
		if [ "$nm" = "255.255.255.255" ]; then
			ip route add $gateway/32 dev eth0
		fi
	fi
	route add default gw $gateway
fi

# set IPv6 gateway
if [ -n "$gateway6" ]; then
	python2.6 /sbin/univention-config-registry set "ipv6/gateway=$gateway6"
	ip -6 route add ::/0 via "$gateway6"
fi

: > /etc/resolv.conf

# nameserver
if [ -n "$nameserver_1" ]; then
	echo "nameserver $nameserver_1" >>/etc/resolv.conf
	python2.6 /sbin/univention-config-registry set nameserver1=$nameserver_1
fi
if [ -n "$nameserver_2" ]; then
	echo "nameserver $nameserver_2" >>/etc/resolv.conf
	python2.6 /sbin/univention-config-registry set nameserver2=$nameserver_2
fi
if [ -n "$nameserver_3" ]; then
	echo "nameserver $nameserver_3" >>/etc/resolv.conf
	python2.6 /sbin/univention-config-registry set nameserver3=$nameserver_3
fi

# dns forwarder
if [ -n "$use_external_nameserver" -a "$use_external_nameserver" = "true" ]; then
	python2.6 /sbin/univention-config-registry set nameserver/external=true
else
	python2.6 /sbin/univention-config-registry set nameserver/external=false
fi
if [ -n "$dns_forwarder_1" ]; then
	univention-config-registry set dns/forwarder1="$dns_forwarder_1"
fi
if [ -n "$dns_forwarder_2" ]; then
	univention-config-registry set dns/forwarder2="$dns_forwarder_2"
fi
if [ -n "$dns_forwarder_3" ]; then
	univention-config-registry set dns/forwarder3="$dns_forwarder_3"
fi

# proxy
if [ -n "$proxy_http" ]; then
	python2.6 /sbin/univention-config-registry set proxy/http=$proxy_http
	python2.6 /sbin/univention-config-registry set proxy/ftp=$proxy_http
fi


