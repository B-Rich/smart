#!/usr/bin/python2.6
# -*- coding: utf-8 -*-
#
# Univention Configuration Registry
"""Install service files."""
#
# Copyright 2007-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import os
import sys
import univention.service_info as us_info
from univention.debhelper import doIt, binary_packages
from optparse import OptionParser

def install_services(info, package):
	"""Process debian/$package.univention-service."""
	cfile = '%s.univention-service' % (package,)
	source = os.path.join('debian', cfile)
	if not os.path.exists(source):
		return

	info.read_services(source)
	failed = info.check_services()
	if failed:
		print >> sys.stderr, 'Incomplete entries in services definition %s' % \
				(cfile,)
		for service, keys in failed.items():
			print >> sys.stderr, '  [%s]' % (service,)
			for key in keys:
				print >> sys.stderr, '    %s' % (key,)
		sys.exit(1)
	dest_path = os.path.join('debian', package,
			us_info.ServiceInfo.BASE_DIR[1:],
			us_info.ServiceInfo.SERVICES)
	dest = os.path.join(dest_path, package + us_info.ServiceInfo.FILE_SUFFIX)

	doIt('install', '-m', '755', '-d', dest_path)
	doIt('install', '-m', '644', source, dest)

def main():
	"""Install service files."""
	usage = "%prog"
	epilog = '''univention-install-service-info is a debhelper like programm
to install service related description files into the package build directories.

The service descriptions debian/*.univention-service go to
/etc/univention/service.info/*.cfg.
	'''
	parser = OptionParser(usage=usage, epilog=epilog)
	parser.add_option('-v', '--verbose',
			dest='verbose', action='store_true',
			help='Verbose mode: show all commands that modify the package build directory.')
	options, args = parser.parse_args()
	if options.verbose:
		os.environ['DH_VERBOSE'] = '1'
	if args:
		parser.error('No argument expected')

	info = us_info.ServiceInfo( install_mode = True )
	try:
		for package in binary_packages():
			install_services(info, package)
	except IOError, ex:
		print >> sys.stderr, ex
		sys.exit(1)

if __name__ == '__main__':
	main()
