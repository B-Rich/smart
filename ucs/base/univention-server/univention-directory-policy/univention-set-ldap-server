#!/usr/bin/python2.6
# -*- coding: utf-8 -*-
#
# Univention Server Memberserver
#  sets LDAP server according to policy
#
# Copyright 2003-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import sys, string, subprocess
import univention.config_registry

configRegistry = univention.config_registry.ConfigRegistry()
configRegistry.load()

found=0

ldap_hostdn = configRegistry.get('ldap/hostdn')
if ldap_hostdn:

	for key in ['ldap/server/name', 'ldap/server/addition']:
		ldap_server_string = configRegistry.get(key)
		if ldap_server_string:
			for k in ldap_server_string.split(' '):
				p1 = subprocess.Popen(['univention_policy_result', '-h', k, '-D', ldap_hostdn, '-y', '/etc/machine.secret', '-s', ldap_hostdn], stdout=subprocess.PIPE)
				result = p1.communicate()[0]
				addition=[]

				if p1.returncode != 0:
					continue

				for line in result.split('\n'):
					line=line.strip(' ').strip('\n')
					if line.startswith('univentionLDAPServer='):
						new_ldap_server=line.replace('univentionLDAPServer=', '').replace('"','')
						if not found:
							ldap_server_name = configRegistry.get('ldap/server/name')
							if not ldap_server_name:
								out=univention.config_registry.handler_set(['ldap/server/name=%s' % new_ldap_server])
							elif  not new_ldap_server == ldap_server_name:
								out=univention.config_registry.handler_set(['ldap/server/name=%s' % new_ldap_server])
							found=1
						else:
							addition.append(new_ldap_server)
				if addition:
					out=univention.config_registry.handler_set(['ldap/server/addition=%s' % string.join(addition,' ')])
				else:
					if configRegistry.get( 'ldap/server/addition' ):
						out=univention.config_registry.handler_unset(['ldap/server/addition'])

				sys.exit(0)

sys.exit(1)
