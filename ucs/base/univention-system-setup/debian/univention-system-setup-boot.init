#!/bin/bash
#
# Univention System Setup
#  boot init script for univention system setup
#
# Copyright 2004-2012 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

eval "$(univention-config-registry shell system/setup/boot/start)"

. /lib/lsb/init-functions

. /usr/share/univention-lib/ucr.sh

case "$1" in
	start)
		log_action_msg "Starting univention-system setup tools"

		# deconfigure temporary interfaces
		ucr search --brief --value '^appliance-mode-temporary$'|cut -f1 -d:|grep -E '^interfaces/[^/]+_[^/]/type$' | while read
		do
			interface="${REPLY%type}"
			for subvar in netmask address broadcast network type
			do
				ucr unset "$interface$subvar"
			done
		done

		# Show corret IP in motd
		if [ -e /etc/motd.setup ]; then
			ucr commit /etc/motd.setup >/dev/null 2>&1
		fi

		# Add public ssh key if the system was startet in EC2:
		if is_ucr_true server/amazon; then
			test -d /root/.ssh || mkdir -p /root/.ssh
			test -e /root/.ssh/authorized_keys || touch /root/.ssh/authorized_keys

			key="$(wget -q -O - http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key)"
			if ! grep -q "$key" /root/.ssh/authorized_keys; then
				echo "$key"  >>/root/.ssh/authorized_keys
			fi
		fi

		if is_ucr_true server/amazon && is_ucr_true system/setup/boot/networking; then
			echo "Save dhclient result in UCR" >>/var/log/univention/setup.log
			/usr/share/univention-network-common/dhclient2ucr --set-forwarder >>/var/log/univention/setup.log 2>&1
			ucr set system/setup/boot/networking=false >>/var/log/univention/setup.log 2>&1
			echo "Save dhclient result in UCR (done)" >>/var/log/univention/setup.log
		fi

		if [ "$system_setup_boot_start" = "yes" -o "$system_setup_boot_start" = "true" ]; then
			/usr/share/univention-system-setup/startxwithfirefox > "/var/log/univention/system-setup-boot.log" 2>&1
		fi
		log_action_end_msg 0
		;;
	stop)
		log_action_end_msg 0
		;;
	*)
		log_action_msg "Usage: /etc/init.d/univention-system-setup-boot {start}."
		exit 1
		;;
esac


