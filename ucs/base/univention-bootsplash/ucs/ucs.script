# This is an example plymouth plugin script

# background image
bg.image = Image("bg.png");
bg.sprite = Sprite(bg.image);
resized.bg.image = bg.image.Scale(Window.GetWidth(), Window.GetHeight());
bg.sprite.SetImage(resized.bg.image);

# navi
navi.image = Image("navi.png");
navi.sprite = Sprite(navi.image);
resized.navi.image = navi.image.Scale(Window.GetWidth(), 37);
navi.sprite.SetImage(resized.navi.image);

# box image
box.image = Image("logo-box.png");
box.sprite = Sprite(box.image);
box.SetOpacity(1.0);
box.sprite.SetX(Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth()  / 2);
box.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight() / 2);

# circle
logo.default = logo.image = Image("logo.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetOpacity(1.0);
logo.sprite.SetX(Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
logo.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
progress = 0;

# univention logo 
u.image = Image("u.png");
u.sprite = Sprite(u.image);
u.SetOpacity(1.0);
u.sprite.SetX(Window.GetX() + Window.GetWidth()  / 2 - u.image.GetWidth()  / 2);
u.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - u.image.GetHeight() / 2);
u.opacity_angle = 0;

##for (i=1; i<=24; i++) {
##    logo[i].image = Image("logo" + i + ".png");
##}
##logo.sprite = Sprite(logo[1].image);
##logo.sprite.SetOpacity(1.0);
##logo.sprite.SetX(Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
##logo.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
##count = 1;

fun refresh_callback ()
  {
    # animation
    ##count = count + 0.3;
    ##index = Math.Int(count % 24) + 1; 
    ##logo.sprite.SetImage(logo[index].image);

    # rotating image
    logo.image = logo.default.Rotate(progress);
    logo.sprite.SetImage(logo.image);
    progress = progress + 0.03;
    if (progress >= (Math.Pi * 2)) {
        progress = 0;
    }
 
    # univention icon with opacity
    ##if (status == "normal")
    ##  {
    ##    u.opacity_angle += ((2 * 3.14) / 50) * 0.5;  # 0.5 HZ
    ##    min_opacity = 0.3;
    ##    opacity = (Math.Cos(u.opacity_angle) + 1) / 2;
    ##    opacity *= 1 - min_opacity;
    ##    opacity += min_opacity;
    ##    u.sprite.SetOpacity (opacity);
    ##  }
    ##else
    ##  {
    ##    u.sprite.SetOpacity (1);
    ##  }
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 1.3 - box.image.GetHeight()/1.3;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }



#----------------------------------------- Status --------------------------------

status_sprite = Sprite();
status_sprite.SetPosition(10, 30, 10000);

fun update_status_callback (status) {
    my_status = Image.Text(status, 1, 1, 1);
    status_sprite.SetImage(my_status);
}
    
#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  u.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
Plymouth.SetUpdateStatusFunction(update_status_callback);

